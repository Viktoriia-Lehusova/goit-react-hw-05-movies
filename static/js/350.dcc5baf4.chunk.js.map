{"version":3,"file":"static/js/350.dcc5baf4.chunk.js","mappings":"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","sources":["fetchAPI.js","components/MovieItem/MovieItem.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0295bc0f580a974d57e0203ed698c033';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByQuery = async searchQuery => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Loader } from '../Loader/Loader';\n\nconst MovieItem = ({ movie, genres }) => {\n  const img_url = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <div id={movie.id}>\n      <div>\n        <img src={img_url + movie.poster_path} alt={movie.name} />\n      </div>\n      <div>\n        <h2>{movie.title}</h2>\n        <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h4>Genres</h4>\n        <ul>\n          {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n        </ul>\n      </div>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>{Loader()}</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieItem;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../fetchAPI';\nimport MovieItem from '../../components/MovieItem/MovieItem';\nimport { Loader } from '../../components/Loader/Loader';\nimport { useRef } from 'react';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const movieById = async () => {\n      setLoading(true);\n      try {\n        const results = await fetchMovieDetails(movieId);\n        if (results.length === 0) {\n          setIsEmpty(true);\n        }\n        setMovie(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieById();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <div> {Loader()} </div>}\n      <Link to={backLocation.current}>Go back</Link>\n      <MovieItem movie={movie} genres={movie.genres} />;\n      {error && <h2>Something went wrong. Try again.</h2>}\n      {isEmpty && <h1> Sorry. There are no movies by your query</h1>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","data","console","log","fetchMovieByQuery","searchQuery","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","movie","genres","id","src","poster_path","alt","name","title","Math","round","vote_average","overview","map","to","Suspense","fallback","Loader","location","useLocation","backLocation","useRef","state","from","useParams","useState","setMovie","loading","setLoading","isEmpty","setIsEmpty","error","setError","useEffect","movieById","results","length","message","current"],"sourceRoot":""}