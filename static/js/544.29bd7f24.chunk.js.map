{"version":3,"file":"static/js/544.29bd7f24.chunk.js","mappings":"oKAkBA,IAhBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CAAMF,GAAE,UAAKA,GAAMG,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaL,GAA7D,gBACGC,QADH,IACGA,EAAAA,EAASC,KAFLF,EADC,KASjB,C,+LCdKM,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,+GAELC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHhB,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,qDAWhBC,EAAiB,mCAAG,WAAMC,GAAN,kGAENL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCAFM,uBAErBJ,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,sDAUjBG,EAAiB,mCAAG,WAAMC,GAAN,kGAENP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACmBT,EADnB,oBAFM,uBAErBG,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,sDAUjBK,EAAc,mCAAG,WAAMD,GAAN,kGAEHP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BAC2BT,EAD3B,oBAFG,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BC,QAAQC,IAAR,MAP0B,yDAAH,sDAUdM,EAAiB,mCAAG,WAAMF,GAAN,kGAENP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BAC2BT,EAD3B,2BAFM,uBAErBG,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,qD,kHCN9B,UAnCa,WACX,OAAsCO,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,6FACpBN,GAAW,GADS,mBAGQf,EAAAA,EAAAA,MAHR,gBAIK,KADfsB,EAHU,EAGVA,SACIC,QACVN,GAAW,GAEbJ,EAAeS,GAPG,kDASlBH,EAAS,KAAMK,SATG,yBAWlBT,GAAW,GAXO,6EAAH,qDAcnBM,GACD,GAAE,KAGD,4BACE,2CACCP,IAAW,gCAAOW,EAAAA,EAAAA,KAAP,QACZ,SAAC,IAAD,CAAWrC,OAAQwB,IAClBM,IAAS,6DACTF,IAAW,+DAGjB,C","sources":["components/MovieList/MovieList.jsx","fetchAPI.js","pages/Home/Home.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link id={`${id}`} state={{ from: location }} to={`/movies/${id}`}>\n            {title ?? name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0295bc0f580a974d57e0203ed698c033';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByQuery = async searchQuery => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useEffect, useState } from 'react';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { fetchTrendMovies } from '../../fetchAPI';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const movieTrending = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchTrendMovies();\n        if (results.length === 0) {\n          setIsEmpty(true);\n        }\n        setTrendMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieTrending();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {loading && <div> {Loader()} </div>}\n      <MovieList movies={trendMovies} />\n      {error && <h2>Something went wrong. Try again.</h2>}\n      {isEmpty && <h1> Sorry. There are no images ... </h1>}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["movies","location","useLocation","map","id","title","name","state","from","to","BASE_URL","API_KEY","fetchTrendMovies","axios","data","console","log","fetchMovieByQuery","searchQuery","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","useState","trendMovies","setTrendMovies","loading","setLoading","isEmpty","setIsEmpty","error","setError","useEffect","movieTrending","results","length","message","Loader"],"sourceRoot":""}