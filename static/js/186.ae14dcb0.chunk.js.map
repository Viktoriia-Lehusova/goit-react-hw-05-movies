{"version":3,"file":"static/js/186.ae14dcb0.chunk.js","mappings":"kOA+CA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBN,GAAW,GADQ,mBAGSO,EAAAA,EAAAA,IAAkBb,GAH3B,gBAIM,KADfc,EAHS,EAGTA,SACIC,QACVP,GAAW,GAEbJ,EAAWU,GAPM,kDASjBJ,EAAS,KAAMM,SATE,yBAWjBV,GAAW,GAXM,6EAAH,qDAclBM,GACD,GAAE,CAACZ,KAGF,2BACGK,IAAW,gCAAOY,EAAAA,EAAAA,KAAP,QACZ,wBACGd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,0BACGD,GACD,uBAAIC,MAFGF,EADE,MAOdV,IAAS,6DACTF,IAAW,qDAGjB,C,+LC3CKe,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,+GAELC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHhB,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,qDAWhBC,EAAiB,mCAAG,WAAMC,GAAN,kGAENL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCAFM,uBAErBJ,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,sDAUjBG,EAAiB,mCAAG,WAAM/B,GAAN,kGAENyB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAtB,EADA,oBACmBuB,EADnB,oBAFM,uBAErBG,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,sDAUjBI,EAAc,mCAAG,WAAMhC,GAAN,kGAEHyB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAtB,EADA,4BAC2BuB,EAD3B,oBAFG,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BC,QAAQC,IAAR,MAP0B,yDAAH,sDAUdf,EAAiB,mCAAG,WAAMb,GAAN,kGAENyB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAtB,EADA,4BAC2BuB,EAD3B,2BAFM,uBAErBG,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","fetchAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../fetchAPI';\nimport { Loader } from '../Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        if (results.length === 0) {\n          setIsEmpty(true);\n        }\n        setReviews(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <div> {Loader()} </div>}\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            {author}\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n      {error && <h2>Something went wrong. Try again.</h2>}\n      {isEmpty && <h1> There are no reviews.</h1>}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0295bc0f580a974d57e0203ed698c033';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByQuery = async searchQuery => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","loading","setLoading","isEmpty","setIsEmpty","error","setError","useEffect","movieReviews","fetchMovieReviews","results","length","message","Loader","map","id","author","content","BASE_URL","API_KEY","fetchTrendMovies","axios","data","console","log","fetchMovieByQuery","searchQuery","fetchMovieDetails","fetchMovieCast"],"sourceRoot":""}