{"version":3,"file":"static/js/247.ea0cb4d7.chunk.js","mappings":"kOAkDA,UA7Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAsBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBN,GAAW,GADK,mBAGSO,EAAAA,EAAAA,IAAeb,GAHxB,gBAIM,KADZG,EAHM,EAGNA,MACCW,QACPN,GAAW,GAEbJ,EAAQD,GAPM,kDASdO,EAAS,KAAMK,SATD,yBAWdT,GAAW,GAXG,6EAAH,qDAcfM,GACD,GAAE,CAACZ,KAGF,2BACGK,IAAW,gCAAOW,EAAAA,EAAAA,KAAP,QACZ,wBACGb,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBAAKC,IA1BC,kCA0BcH,EAAcI,IAAI,MACtC,wBAAKH,KACL,uBAAIC,MAHGH,EADD,MAQXT,IAAS,6DACTF,IAAW,qEAGjB,C,+LC9CKiB,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,+GAELC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAHhB,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,GALqB,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,qDAWhBC,EAAiB,mCAAG,WAAMC,GAAN,kGAENL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCAFM,uBAErBJ,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,sDAUjBG,EAAiB,mCAAG,WAAMjC,GAAN,kGAEN2B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAxB,EADA,oBACmByB,EADnB,oBAFM,uBAErBG,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,sDAUjBjB,EAAc,mCAAG,WAAMb,GAAN,kGAEH2B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAxB,EADA,4BAC2ByB,EAD3B,oBAFG,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BC,QAAQC,IAAR,MAP0B,yDAAH,sDAUdI,EAAiB,mCAAG,WAAMlC,GAAN,kGAEN2B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAxB,EADA,4BAC2ByB,EAD3B,2BAFM,uBAErBG,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,gCAO7BC,QAAQC,IAAR,MAP6B,yDAAH,qD","sources":["components/Cast/Cast.jsx","fetchAPI.js"],"sourcesContent":["import { fetchMovieCast } from '../../fetchAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [error, setError] = useState(null);\n\n  const img_url = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    const movieCast = async () => {\n      setLoading(true);\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        if (cast.length === 0) {\n          setIsEmpty(true);\n        }\n        setCast(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <div> {Loader()} </div>}\n      <ul>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img src={img_url + profile_path} alt=\"\" />\n            <h2>{name}</h2>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n      {error && <h2>Something went wrong. Try again.</h2>}\n      {isEmpty && <h1> Sorry, we dont have this information.</h1>}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0295bc0f580a974d57e0203ed698c033';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieByQuery = async searchQuery => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","cast","setCast","loading","setLoading","isEmpty","setIsEmpty","error","setError","useEffect","movieCast","fetchMovieCast","length","message","Loader","map","id","profile_path","name","character","src","alt","BASE_URL","API_KEY","fetchTrendMovies","axios","data","console","log","fetchMovieByQuery","searchQuery","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}